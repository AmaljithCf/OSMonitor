// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dmesgInfo.proto

#ifndef PROTOBUF_dmesgInfo_2eproto__INCLUDED
#define PROTOBUF_dmesgInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace eolwral {
namespace osmonitor {
namespace core {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dmesgInfo_2eproto();
void protobuf_AssignDesc_dmesgInfo_2eproto();
void protobuf_ShutdownFile_dmesgInfo_2eproto();

class dmesgInfo;

enum dmesgInfo_dmesgLevel {
  dmesgInfo_dmesgLevel_EMERGENCY = 0,
  dmesgInfo_dmesgLevel_ALERT = 1,
  dmesgInfo_dmesgLevel_CRITICAL = 2,
  dmesgInfo_dmesgLevel_ERROR = 3,
  dmesgInfo_dmesgLevel_WARNING = 4,
  dmesgInfo_dmesgLevel_NOTICE = 5,
  dmesgInfo_dmesgLevel_INFORMATION = 6,
  dmesgInfo_dmesgLevel_DEBUG = 7
};
bool dmesgInfo_dmesgLevel_IsValid(int value);
const dmesgInfo_dmesgLevel dmesgInfo_dmesgLevel_dmesgLevel_MIN = dmesgInfo_dmesgLevel_EMERGENCY;
const dmesgInfo_dmesgLevel dmesgInfo_dmesgLevel_dmesgLevel_MAX = dmesgInfo_dmesgLevel_DEBUG;
const int dmesgInfo_dmesgLevel_dmesgLevel_ARRAYSIZE = dmesgInfo_dmesgLevel_dmesgLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* dmesgInfo_dmesgLevel_descriptor();
inline const ::std::string& dmesgInfo_dmesgLevel_Name(dmesgInfo_dmesgLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    dmesgInfo_dmesgLevel_descriptor(), value);
}
inline bool dmesgInfo_dmesgLevel_Parse(
    const ::std::string& name, dmesgInfo_dmesgLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<dmesgInfo_dmesgLevel>(
    dmesgInfo_dmesgLevel_descriptor(), name, value);
}
// ===================================================================

class dmesgInfo : public ::google::protobuf::Message {
 public:
  dmesgInfo();
  virtual ~dmesgInfo();

  dmesgInfo(const dmesgInfo& from);

  inline dmesgInfo& operator=(const dmesgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dmesgInfo& default_instance();

  void Swap(dmesgInfo* other);

  // implements Message ----------------------------------------------

  dmesgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dmesgInfo& from);
  void MergeFrom(const dmesgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef dmesgInfo_dmesgLevel dmesgLevel;
  static const dmesgLevel EMERGENCY = dmesgInfo_dmesgLevel_EMERGENCY;
  static const dmesgLevel ALERT = dmesgInfo_dmesgLevel_ALERT;
  static const dmesgLevel CRITICAL = dmesgInfo_dmesgLevel_CRITICAL;
  static const dmesgLevel ERROR = dmesgInfo_dmesgLevel_ERROR;
  static const dmesgLevel WARNING = dmesgInfo_dmesgLevel_WARNING;
  static const dmesgLevel NOTICE = dmesgInfo_dmesgLevel_NOTICE;
  static const dmesgLevel INFORMATION = dmesgInfo_dmesgLevel_INFORMATION;
  static const dmesgLevel DEBUG = dmesgInfo_dmesgLevel_DEBUG;
  static inline bool dmesgLevel_IsValid(int value) {
    return dmesgInfo_dmesgLevel_IsValid(value);
  }
  static const dmesgLevel dmesgLevel_MIN =
    dmesgInfo_dmesgLevel_dmesgLevel_MIN;
  static const dmesgLevel dmesgLevel_MAX =
    dmesgInfo_dmesgLevel_dmesgLevel_MAX;
  static const int dmesgLevel_ARRAYSIZE =
    dmesgInfo_dmesgLevel_dmesgLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  dmesgLevel_descriptor() {
    return dmesgInfo_dmesgLevel_descriptor();
  }
  static inline const ::std::string& dmesgLevel_Name(dmesgLevel value) {
    return dmesgInfo_dmesgLevel_Name(value);
  }
  static inline bool dmesgLevel_Parse(const ::std::string& name,
      dmesgLevel* value) {
    return dmesgInfo_dmesgLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .com.eolwral.osmonitor.core.dmesgInfo.dmesgLevel level = 1 [default = INFORMATION];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel level() const;
  inline void set_level(::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel value);

  // required uint64 seconds = 2;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  inline ::google::protobuf::uint64 seconds() const;
  inline void set_seconds(::google::protobuf::uint64 value);

  // required string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:com.eolwral.osmonitor.core.dmesgInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 seconds_;
  ::std::string* message_;
  int level_;
  friend void  protobuf_AddDesc_dmesgInfo_2eproto();
  friend void protobuf_AssignDesc_dmesgInfo_2eproto();
  friend void protobuf_ShutdownFile_dmesgInfo_2eproto();

  void InitAsDefaultInstance();
  static dmesgInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// dmesgInfo

// required .com.eolwral.osmonitor.core.dmesgInfo.dmesgLevel level = 1 [default = INFORMATION];
inline bool dmesgInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dmesgInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dmesgInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dmesgInfo::clear_level() {
  level_ = 6;
  clear_has_level();
}
inline ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel dmesgInfo::level() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.dmesgInfo.level)
  return static_cast< ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel >(level_);
}
inline void dmesgInfo::set_level(::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel value) {
  assert(::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel_IsValid(value));
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.dmesgInfo.level)
}

// required uint64 seconds = 2;
inline bool dmesgInfo::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dmesgInfo::set_has_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dmesgInfo::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dmesgInfo::clear_seconds() {
  seconds_ = GOOGLE_ULONGLONG(0);
  clear_has_seconds();
}
inline ::google::protobuf::uint64 dmesgInfo::seconds() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.dmesgInfo.seconds)
  return seconds_;
}
inline void dmesgInfo::set_seconds(::google::protobuf::uint64 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.dmesgInfo.seconds)
}

// required string message = 3;
inline bool dmesgInfo::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dmesgInfo::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dmesgInfo::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dmesgInfo::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& dmesgInfo::message() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.dmesgInfo.message)
  return *message_;
}
inline void dmesgInfo::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.dmesgInfo.message)
}
inline void dmesgInfo::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.eolwral.osmonitor.core.dmesgInfo.message)
}
inline void dmesgInfo::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.eolwral.osmonitor.core.dmesgInfo.message)
}
inline ::std::string* dmesgInfo::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.eolwral.osmonitor.core.dmesgInfo.message)
  return message_;
}
inline ::std::string* dmesgInfo::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void dmesgInfo::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.eolwral.osmonitor.core.dmesgInfo.message)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace osmonitor
}  // namespace eolwral
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel>() {
  return ::com::eolwral::osmonitor::core::dmesgInfo_dmesgLevel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dmesgInfo_2eproto__INCLUDED

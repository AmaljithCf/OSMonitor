// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpuInfo.proto

#ifndef PROTOBUF_cpuInfo_2eproto__INCLUDED
#define PROTOBUF_cpuInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace eolwral {
namespace osmonitor {
namespace core {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cpuInfo_2eproto();
void protobuf_AssignDesc_cpuInfo_2eproto();
void protobuf_ShutdownFile_cpuInfo_2eproto();

class cpuInfo;

// ===================================================================

class cpuInfo : public ::google::protobuf::Message {
 public:
  cpuInfo();
  virtual ~cpuInfo();

  cpuInfo(const cpuInfo& from);

  inline cpuInfo& operator=(const cpuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cpuInfo& default_instance();

  void Swap(cpuInfo* other);

  // implements Message ----------------------------------------------

  cpuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cpuInfo& from);
  void MergeFrom(const cpuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 userTime = 1;
  inline bool has_usertime() const;
  inline void clear_usertime();
  static const int kUserTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 usertime() const;
  inline void set_usertime(::google::protobuf::uint64 value);

  // required uint64 niceTime = 2;
  inline bool has_nicetime() const;
  inline void clear_nicetime();
  static const int kNiceTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 nicetime() const;
  inline void set_nicetime(::google::protobuf::uint64 value);

  // required uint64 systemTime = 3;
  inline bool has_systemtime() const;
  inline void clear_systemtime();
  static const int kSystemTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 systemtime() const;
  inline void set_systemtime(::google::protobuf::uint64 value);

  // required uint64 idleTime = 4;
  inline bool has_idletime() const;
  inline void clear_idletime();
  static const int kIdleTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 idletime() const;
  inline void set_idletime(::google::protobuf::uint64 value);

  // required uint64 ioWaitTime = 5;
  inline bool has_iowaittime() const;
  inline void clear_iowaittime();
  static const int kIoWaitTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 iowaittime() const;
  inline void set_iowaittime(::google::protobuf::uint64 value);

  // required uint64 irqTime = 6;
  inline bool has_irqtime() const;
  inline void clear_irqtime();
  static const int kIrqTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 irqtime() const;
  inline void set_irqtime(::google::protobuf::uint64 value);

  // required uint64 softIRQTime = 7;
  inline bool has_softirqtime() const;
  inline void clear_softirqtime();
  static const int kSoftIRQTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 softirqtime() const;
  inline void set_softirqtime(::google::protobuf::uint64 value);

  // required float cpuUtilization = 8;
  inline bool has_cpuutilization() const;
  inline void clear_cpuutilization();
  static const int kCpuUtilizationFieldNumber = 8;
  inline float cpuutilization() const;
  inline void set_cpuutilization(float value);

  // required float IoUtilization = 9;
  inline bool has_ioutilization() const;
  inline void clear_ioutilization();
  static const int kIoUtilizationFieldNumber = 9;
  inline float ioutilization() const;
  inline void set_ioutilization(float value);

  // required uint64 cpuTime = 10;
  inline bool has_cputime() const;
  inline void clear_cputime();
  static const int kCpuTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 cputime() const;
  inline void set_cputime(::google::protobuf::uint64 value);

  // optional uint32 cpuNumber = 11;
  inline bool has_cpunumber() const;
  inline void clear_cpunumber();
  static const int kCpuNumberFieldNumber = 11;
  inline ::google::protobuf::uint32 cpunumber() const;
  inline void set_cpunumber(::google::protobuf::uint32 value);

  // optional bool offLine = 12;
  inline bool has_offline() const;
  inline void clear_offline();
  static const int kOffLineFieldNumber = 12;
  inline bool offline() const;
  inline void set_offline(bool value);

  // @@protoc_insertion_point(class_scope:com.eolwral.osmonitor.core.cpuInfo)
 private:
  inline void set_has_usertime();
  inline void clear_has_usertime();
  inline void set_has_nicetime();
  inline void clear_has_nicetime();
  inline void set_has_systemtime();
  inline void clear_has_systemtime();
  inline void set_has_idletime();
  inline void clear_has_idletime();
  inline void set_has_iowaittime();
  inline void clear_has_iowaittime();
  inline void set_has_irqtime();
  inline void clear_has_irqtime();
  inline void set_has_softirqtime();
  inline void clear_has_softirqtime();
  inline void set_has_cpuutilization();
  inline void clear_has_cpuutilization();
  inline void set_has_ioutilization();
  inline void clear_has_ioutilization();
  inline void set_has_cputime();
  inline void clear_has_cputime();
  inline void set_has_cpunumber();
  inline void clear_has_cpunumber();
  inline void set_has_offline();
  inline void clear_has_offline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 usertime_;
  ::google::protobuf::uint64 nicetime_;
  ::google::protobuf::uint64 systemtime_;
  ::google::protobuf::uint64 idletime_;
  ::google::protobuf::uint64 iowaittime_;
  ::google::protobuf::uint64 irqtime_;
  ::google::protobuf::uint64 softirqtime_;
  float cpuutilization_;
  float ioutilization_;
  ::google::protobuf::uint64 cputime_;
  ::google::protobuf::uint32 cpunumber_;
  bool offline_;
  friend void  protobuf_AddDesc_cpuInfo_2eproto();
  friend void protobuf_AssignDesc_cpuInfo_2eproto();
  friend void protobuf_ShutdownFile_cpuInfo_2eproto();

  void InitAsDefaultInstance();
  static cpuInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// cpuInfo

// required uint64 userTime = 1;
inline bool cpuInfo::has_usertime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cpuInfo::set_has_usertime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cpuInfo::clear_has_usertime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cpuInfo::clear_usertime() {
  usertime_ = GOOGLE_ULONGLONG(0);
  clear_has_usertime();
}
inline ::google::protobuf::uint64 cpuInfo::usertime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.userTime)
  return usertime_;
}
inline void cpuInfo::set_usertime(::google::protobuf::uint64 value) {
  set_has_usertime();
  usertime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.userTime)
}

// required uint64 niceTime = 2;
inline bool cpuInfo::has_nicetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cpuInfo::set_has_nicetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cpuInfo::clear_has_nicetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cpuInfo::clear_nicetime() {
  nicetime_ = GOOGLE_ULONGLONG(0);
  clear_has_nicetime();
}
inline ::google::protobuf::uint64 cpuInfo::nicetime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.niceTime)
  return nicetime_;
}
inline void cpuInfo::set_nicetime(::google::protobuf::uint64 value) {
  set_has_nicetime();
  nicetime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.niceTime)
}

// required uint64 systemTime = 3;
inline bool cpuInfo::has_systemtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cpuInfo::set_has_systemtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cpuInfo::clear_has_systemtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cpuInfo::clear_systemtime() {
  systemtime_ = GOOGLE_ULONGLONG(0);
  clear_has_systemtime();
}
inline ::google::protobuf::uint64 cpuInfo::systemtime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.systemTime)
  return systemtime_;
}
inline void cpuInfo::set_systemtime(::google::protobuf::uint64 value) {
  set_has_systemtime();
  systemtime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.systemTime)
}

// required uint64 idleTime = 4;
inline bool cpuInfo::has_idletime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void cpuInfo::set_has_idletime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void cpuInfo::clear_has_idletime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void cpuInfo::clear_idletime() {
  idletime_ = GOOGLE_ULONGLONG(0);
  clear_has_idletime();
}
inline ::google::protobuf::uint64 cpuInfo::idletime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.idleTime)
  return idletime_;
}
inline void cpuInfo::set_idletime(::google::protobuf::uint64 value) {
  set_has_idletime();
  idletime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.idleTime)
}

// required uint64 ioWaitTime = 5;
inline bool cpuInfo::has_iowaittime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void cpuInfo::set_has_iowaittime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void cpuInfo::clear_has_iowaittime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void cpuInfo::clear_iowaittime() {
  iowaittime_ = GOOGLE_ULONGLONG(0);
  clear_has_iowaittime();
}
inline ::google::protobuf::uint64 cpuInfo::iowaittime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.ioWaitTime)
  return iowaittime_;
}
inline void cpuInfo::set_iowaittime(::google::protobuf::uint64 value) {
  set_has_iowaittime();
  iowaittime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.ioWaitTime)
}

// required uint64 irqTime = 6;
inline bool cpuInfo::has_irqtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void cpuInfo::set_has_irqtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void cpuInfo::clear_has_irqtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void cpuInfo::clear_irqtime() {
  irqtime_ = GOOGLE_ULONGLONG(0);
  clear_has_irqtime();
}
inline ::google::protobuf::uint64 cpuInfo::irqtime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.irqTime)
  return irqtime_;
}
inline void cpuInfo::set_irqtime(::google::protobuf::uint64 value) {
  set_has_irqtime();
  irqtime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.irqTime)
}

// required uint64 softIRQTime = 7;
inline bool cpuInfo::has_softirqtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void cpuInfo::set_has_softirqtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void cpuInfo::clear_has_softirqtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void cpuInfo::clear_softirqtime() {
  softirqtime_ = GOOGLE_ULONGLONG(0);
  clear_has_softirqtime();
}
inline ::google::protobuf::uint64 cpuInfo::softirqtime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.softIRQTime)
  return softirqtime_;
}
inline void cpuInfo::set_softirqtime(::google::protobuf::uint64 value) {
  set_has_softirqtime();
  softirqtime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.softIRQTime)
}

// required float cpuUtilization = 8;
inline bool cpuInfo::has_cpuutilization() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void cpuInfo::set_has_cpuutilization() {
  _has_bits_[0] |= 0x00000080u;
}
inline void cpuInfo::clear_has_cpuutilization() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void cpuInfo::clear_cpuutilization() {
  cpuutilization_ = 0;
  clear_has_cpuutilization();
}
inline float cpuInfo::cpuutilization() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.cpuUtilization)
  return cpuutilization_;
}
inline void cpuInfo::set_cpuutilization(float value) {
  set_has_cpuutilization();
  cpuutilization_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.cpuUtilization)
}

// required float IoUtilization = 9;
inline bool cpuInfo::has_ioutilization() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void cpuInfo::set_has_ioutilization() {
  _has_bits_[0] |= 0x00000100u;
}
inline void cpuInfo::clear_has_ioutilization() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void cpuInfo::clear_ioutilization() {
  ioutilization_ = 0;
  clear_has_ioutilization();
}
inline float cpuInfo::ioutilization() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.IoUtilization)
  return ioutilization_;
}
inline void cpuInfo::set_ioutilization(float value) {
  set_has_ioutilization();
  ioutilization_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.IoUtilization)
}

// required uint64 cpuTime = 10;
inline bool cpuInfo::has_cputime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void cpuInfo::set_has_cputime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void cpuInfo::clear_has_cputime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void cpuInfo::clear_cputime() {
  cputime_ = GOOGLE_ULONGLONG(0);
  clear_has_cputime();
}
inline ::google::protobuf::uint64 cpuInfo::cputime() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.cpuTime)
  return cputime_;
}
inline void cpuInfo::set_cputime(::google::protobuf::uint64 value) {
  set_has_cputime();
  cputime_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.cpuTime)
}

// optional uint32 cpuNumber = 11;
inline bool cpuInfo::has_cpunumber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void cpuInfo::set_has_cpunumber() {
  _has_bits_[0] |= 0x00000400u;
}
inline void cpuInfo::clear_has_cpunumber() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void cpuInfo::clear_cpunumber() {
  cpunumber_ = 0u;
  clear_has_cpunumber();
}
inline ::google::protobuf::uint32 cpuInfo::cpunumber() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.cpuNumber)
  return cpunumber_;
}
inline void cpuInfo::set_cpunumber(::google::protobuf::uint32 value) {
  set_has_cpunumber();
  cpunumber_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.cpuNumber)
}

// optional bool offLine = 12;
inline bool cpuInfo::has_offline() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void cpuInfo::set_has_offline() {
  _has_bits_[0] |= 0x00000800u;
}
inline void cpuInfo::clear_has_offline() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void cpuInfo::clear_offline() {
  offline_ = false;
  clear_has_offline();
}
inline bool cpuInfo::offline() const {
  // @@protoc_insertion_point(field_get:com.eolwral.osmonitor.core.cpuInfo.offLine)
  return offline_;
}
inline void cpuInfo::set_offline(bool value) {
  set_has_offline();
  offline_ = value;
  // @@protoc_insertion_point(field_set:com.eolwral.osmonitor.core.cpuInfo.offLine)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace osmonitor
}  // namespace eolwral
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cpuInfo_2eproto__INCLUDED
